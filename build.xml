<?xml version="1.0" encoding="UTF-8"?>
<project name="dss" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<!-- set global properties for this build -->
	<property name="src.dir" location="src" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="lib.dir" location="lib" />

	<patternset id="pattern.only.jar">
		<include name="**/*.jar" />
		<exclude name="**/*javadoc*" />
		<exclude name="**/*sources*" />
	</patternset>

	<path id="project.classpath">
		<fileset dir="${lib.dir}">
			<patternset refid="pattern.only.jar" />
		</fileset>
	</path>

	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<patternset refid="pattern.only.jar" />
		</fileset>
	</path>

	<pathconvert property="mf.classpath" pathsep=" " refid="build.classpath">
		<mapper>
			<!--ANT 1.7 is required -->
			<chainedmapper>
				<flattenmapper />
				<globmapper from="*.jar" to="*.jar" />
			</chainedmapper>
		</mapper>
	</pathconvert>

	<!-- set ivy properties -->
	<property name="ivy.install.version" value="2.3.0-rc1" />
	<property name="ivy.jar.dir" value="${basedir}/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="init" depends="ivy-retrieve">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.dir}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src.dir} into ${build.dir} -->
		<javac srcdir="${src.dir}" destdir="${build.dir}">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<target name="create_run_jar_client" depends="deleteOldUnderDist,compile" description="generate the runnable client jar file with lib embedded">
		<!--ANT 1.7 is required-->
		<mkdir dir="${dist.dir}/lib" />
		<jar destfile="${dist.dir}/lib/dssclient-${DSTAMP}-${TSTAMP}.jar">
			<manifest>
				<attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader" />
				<attribute name="Rsrc-Main-Class" value="sg.edu.sutd.dss.client.Client" />
				<attribute name="Class-Path" value="." />
				<attribute name="Rsrc-Class-Path" value="./ ${mf.classpath}" />
			</manifest>
			<fileset dir="${build.dir}" />
			<!--
				jar-in-jar-loader.zip can be got by Eclipse menu: File> Export... > Java/Runnable jar file
				Need to be improved.
			-->
			<zipfileset src="${lib.dir}/jar-in-jar-loader.zip" />
			<zipfileset dir="${lib.dir}">
				<patternset refid="pattern.only.jar" />
			</zipfileset>
		</jar>
	</target>

	<target name="dist" depends="compile" description="pack compiled file into a jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist.dir}/lib" />
		<!-- Put everything in ${build.dir} into the dss-${DSTAMP}-${TSTAMP}.jar file -->
		<jar jarfile="${dist.dir}/lib/dss-${DSTAMP}-${TSTAMP}.jar" basedir="${build.dir}" />
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build.dir} and ${dist.dir} directory trees -->
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="deleteOldUnderDist" description="Delete the old build files and logs">
		<!-- Delete the old build files and logs under ${dist.dir} directory -->
		<delete>
			<fileset dir="${dist.dir}" includes="**/*.log.*" />
			<fileset dir="${dist.dir}" includes="**/*.jar" />
		</delete>
	</target>
	<!--
		========================= tgt : ivy-download ==========================
		-->
	<target name="ivy-download" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}" />
		<!--
		download Ivy from web site so that it can be used even without any special installation
		-->
		<echo message="installing ivy..." />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>
	<!--
		================================= target: ivy-install ==========================
		this target is not necessary if you put ivy.jar in your ant lib directory if you already have ivy in your ant lib, you can simply remove this target and the dependency =================================
		-->
	<target name="ivy-install" depends="ivy-download" description="--> install ivy">
		<!--
		try to load ivy here from local ivy dir, in case the user has not already dropped it into ant's lib dir (note that the latter copy will always take precedence). We will not fail as long as local lib dir exists (it may be empty) and ivy is in at least one of ant's lib dir or the local lib dir.
		-->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>
	<!--
	================================= target: ivy-clean =================================
	-->
	<target name="ivy-clean" description="--> clean the ivy installation">
		<delete dir="${ivy.jar.dir}" />
	</target>
	<!--
	================================= target: ivy-cleanCache =================================
	-->
	<target name="ivy-cleanCache" depends="ivy-install" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>
	<target name="ivy-retrieve" depends="ivy-install" description="--> retrieving libs...">
		<ivy:retrieve />
	</target>
</project>